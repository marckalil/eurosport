require('@babel/register');

const path = require('path');
module.exports = {
  parser: 'babel-eslint',
  plugins: [
    'flowtype',
    'import',
    'prettier',
    'react-native',
    'react',
  ],
  parserOptions: {
    ecmaVersion: 6,
    sourceType: 'module',
    ecmaFeatures: {
      modules: true,
      jsx: true,
    },
  },
  extends: [
    'airbnb-standard',
    'eslint:recommended',
    'plugin:flowtype/recommended',
    'plugin:import/errors',
    'plugin:import/warnings',
    'plugin:prettier/recommended',
    'plugin:react-native-a11y/recommended',
    'plugin:react-native/all',
    'plugin:react/recommended',
    'prettier/flowtype',
    'prettier/react',
    'prettier/standard',
  ],
  rules: {
    'react-native/sort-styles': 0,
    'import/no-cycle': 0,
    'flowtype/generic-spacing': [0, 'never'],
    'import/extensions': [1, 'never', { svg: 'always' }],
    'import/no-extraneous-dependencies': [
      'error',
      {
        devDependencies: true,
        optionalDependencies: false,
        peerDependencies: false,
      },
    ],
    'newline-per-chained-call': [2, { ignoreChainWithDepth: 2 }],
    'no-console': 0,
    'no-undef': 1,
    'no-unused-vars': 1,
    'no-useless-escape': 0,
    'one-var': ['error', 'never'],
    'prefer-destructuring': [1, { object: true, array: true }],
    'react/destructuring-assignment': [0],
    'react/forbid-component-props': [0],
    'react/forbid-prop-types': [0, { forbid: [] }],
    'react/jsx-filename-extension': [1, { extensions: ['.js', '.jsx'] }],
    'react/jsx-indent-props': [0],
    'react/jsx-indent': [0],
    'react/jsx-sort-props': [2],
    'import/prefer-default-export': 0,
    'react/prefer-stateless-function': [2, { ignorePureComponents: true }],
    'react/prop-types': 0,
    'react/display-name': 0,
    'react/default-props-match-prop-types': 0,
    'react-native/no-inline-styles': 0,
    'react/require-default-props': 0,
    'react-native/split-platform-components': 0,
    'flowtype/no-dupe-keys': 2,
    'flowtype/require-valid-file-annotation': [2, 'always'],
    'react/prefer-stateless-function': 0,
    'react/sort-comp': [
      1,
      {
        order: [
          'static-methods',
          'type-annotations',
          'instance-variables',
          'lifecycle',
          'everything-else',
          'render',
        ],
        groups: {
          lifecycle: [
            'displayName',
            'propTypes',
            'contextTypes',
            'childContextTypes',
            'mixins',
            'statics',
            'defaultProps',
            'constructor',
            'getDefaultProps',
            'state',
            'getInitialState',
            'getChildContext',
            'getDerivedStateFromProps',
            'componentWillMount',
            'UNSAFE_componentWillMount',
            'componentDidMount',
            'componentWillReceiveProps',
            'UNSAFE_componentWillReceiveProps',
            'shouldComponentUpdate',
            'componentWillUpdate',
            'UNSAFE_componentWillUpdate',
            'getSnapshotBeforeUpdate',
            'componentDidUpdate',
            'componentDidCatch',
            'componentWillUnmount',
          ],
        },
      },
    ],
    'react-native/no-color-literals': 0,
  },
  settings: {
    'import/ignore': ['node_modules'],
    'prettier/prettier': [
      'error',
      {
        singleQuote: true,
        parser: 'flow',
      },
    ],
    flowtype: {
      onlyFilesWithFlowAnnotation: false,
    },
  },
  env: {
    jest: true,
    es6: true,
    browser: true,
    node: true,
  },
};
